// <auto-generated />
using System;
using AppData.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppData.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231017165259_DB02")]
    partial class DB02
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AppData.model.Anh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Connect")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Anh", (string)null);
                });

            modelBuilder.Entity("AppData.model.BinhLuan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DanhGiaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("IdNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSanPhamChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("DateTime");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdNguoiDung");

                    b.HasIndex("IdSanPhamChiTiet");

                    b.ToTable("binhLuans");
                });

            modelBuilder.Entity("AppData.model.ChatLieu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenChatLieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChatLieu", (string)null);
                });

            modelBuilder.Entity("AppData.model.Combo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTaCombo")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenCombo")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TienGiamGia")
                        .HasColumnType("decimal");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("combos");
                });

            modelBuilder.Entity("AppData.model.ComboChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal");

                    b.Property<Guid>("IdCombo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSPCT")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuongSanPham")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCombo");

                    b.HasIndex("IdSPCT");

                    b.ToTable("comboChiTiets");
                });

            modelBuilder.Entity("AppData.model.DanhMuc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DanhMuc", (string)null);
                });

            modelBuilder.Entity("AppData.model.GioHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("IdNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdNguoiDung");

                    b.ToTable("gioHangs");
                });

            modelBuilder.Entity("AppData.model.GioHangChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal");

                    b.Property<Guid?>("IdComboChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdGioHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSanPhamChiTiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdComboChiTiet");

                    b.HasIndex("IdGioHang");

                    b.HasIndex("IdSanPhamChiTiet");

                    b.ToTable("gioHangChiTiets");
                });

            modelBuilder.Entity("AppData.model.HinhThucThanhToan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenHinhThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("hinhThucThanhToans");
                });

            modelBuilder.Entity("AppData.model.HoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("IDHTTT")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNguoiDunh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdVoucherDetail")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaHD")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NgayGiao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("NgayNhan")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("DateTime");

                    b.Property<string>("NguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("QuanHuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("TienVanChuyen")
                        .HasColumnType("decimal");

                    b.Property<string>("Tinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IDHTTT");

                    b.HasIndex("IdNguoiDunh");

                    b.HasIndex("IdVoucherDetail");

                    b.ToTable("hoaDons");
                });

            modelBuilder.Entity("AppData.model.HoaDonChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal");

                    b.Property<Guid>("IDHD")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdCombo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSPCT")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IDHD");

                    b.HasIndex("IdCombo");

                    b.HasIndex("IdSPCT");

                    b.ToTable("hoaDonChiTiets");
                });

            modelBuilder.Entity("AppData.model.LichSuHoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("IdHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdHoaDon");

                    b.HasIndex("IdNguoiDung");

                    b.ToTable("lichSuHoas");
                });

            modelBuilder.Entity("AppData.model.MauSac", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenMauSac")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MauSac", (string)null);
                });

            modelBuilder.Entity("AppData.model.NguoiDung", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("DateTime");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("QuanHuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThanhPho")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("AppData.model.Quyen", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("AppData.model.SanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdThuongHieu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdXuatSu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdThuongHieu");

                    b.HasIndex("IdXuatSu");

                    b.ToTable("SanPham", (string)null);
                });

            modelBuilder.Entity("AppData.model.SanPhamChiTiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal");

                    b.Property<Guid>("IDSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdAnh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdChatLieu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDanhMuc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMauSac")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaSp")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IDSP");

                    b.HasIndex("IdAnh");

                    b.HasIndex("IdChatLieu");

                    b.HasIndex("IdDanhMuc");

                    b.HasIndex("IdMauSac");

                    b.HasIndex("IdSize");

                    b.ToTable("sanPhamChiTiets");
                });

            modelBuilder.Entity("AppData.model.Size", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Size", (string)null);
                });

            modelBuilder.Entity("AppData.model.ThuongHieu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ThuongHieu", (string)null);
                });

            modelBuilder.Entity("AppData.model.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DieuKienGiamGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("GiaTriVoucher")
                        .HasColumnType("Decimal");

                    b.Property<string>("MaVoucher")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("DateTime");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Voucher", (string)null);
                });

            modelBuilder.Entity("AppData.model.VoucherDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdVoucher")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Soluong")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdNguoiDung");

                    b.HasIndex("IdVoucher");

                    b.ToTable("voucherDetail");
                });

            modelBuilder.Entity("AppData.model.XuatSu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TenXuatSu")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("XuatSu", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AppData.model.BinhLuan", b =>
                {
                    b.HasOne("AppData.model.NguoiDung", "nguoiDung")
                        .WithMany("BinhLuans")
                        .HasForeignKey("IdNguoiDung")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppData.model.SanPhamChiTiet", "SanPhamChiTiets")
                        .WithMany("BinhLuans")
                        .HasForeignKey("IdSanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SanPhamChiTiets");

                    b.Navigation("nguoiDung");
                });

            modelBuilder.Entity("AppData.model.ComboChiTiet", b =>
                {
                    b.HasOne("AppData.model.Combo", "combos")
                        .WithMany("ComboChiTiet")
                        .HasForeignKey("IdCombo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppData.model.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("comboChiTiets")
                        .HasForeignKey("IdSPCT")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SanPhamChiTiet");

                    b.Navigation("combos");
                });

            modelBuilder.Entity("AppData.model.GioHang", b =>
                {
                    b.HasOne("AppData.model.NguoiDung", "nguoiDung")
                        .WithMany("gioHangs")
                        .HasForeignKey("IdNguoiDung")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("nguoiDung");
                });

            modelBuilder.Entity("AppData.model.GioHangChiTiet", b =>
                {
                    b.HasOne("AppData.model.ComboChiTiet", "ComboChiTiet")
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("IdComboChiTiet")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AppData.model.GioHang", "GioHang")
                        .WithMany("gioHangChiTiets")
                        .HasForeignKey("IdGioHang")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppData.model.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("gioHangChiTiets")
                        .HasForeignKey("IdSanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ComboChiTiet");

                    b.Navigation("GioHang");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("AppData.model.HoaDon", b =>
                {
                    b.HasOne("AppData.model.HinhThucThanhToan", "HinhThucThanhToan")
                        .WithMany("HoaDons")
                        .HasForeignKey("IDHTTT")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppData.model.NguoiDung", "NguoiDung")
                        .WithMany("hoaDons")
                        .HasForeignKey("IdNguoiDunh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppData.model.VoucherDetail", "voucherDetail")
                        .WithMany("hoaDons")
                        .HasForeignKey("IdVoucherDetail")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HinhThucThanhToan");

                    b.Navigation("NguoiDung");

                    b.Navigation("voucherDetail");
                });

            modelBuilder.Entity("AppData.model.HoaDonChiTiet", b =>
                {
                    b.HasOne("AppData.model.HoaDon", "HoaDon")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("IDHD")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppData.model.ComboChiTiet", "comboChiTiet")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("IdCombo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AppData.model.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("hoaDonChiTiets")
                        .HasForeignKey("IdSPCT")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("HoaDon");

                    b.Navigation("SanPhamChiTiet");

                    b.Navigation("comboChiTiet");
                });

            modelBuilder.Entity("AppData.model.LichSuHoaDon", b =>
                {
                    b.HasOne("AppData.model.HoaDon", "HoaDon")
                        .WithMany("LichSuHoaDons")
                        .HasForeignKey("IdHoaDon")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppData.model.NguoiDung", "nguoiDung")
                        .WithMany("lichSuHoaDons")
                        .HasForeignKey("IdNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("nguoiDung");
                });

            modelBuilder.Entity("AppData.model.SanPham", b =>
                {
                    b.HasOne("AppData.model.ThuongHieu", "ThuongHieu")
                        .WithMany("SanPham")
                        .HasForeignKey("IdThuongHieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.model.XuatSu", "XuatSu")
                        .WithMany("SanPham")
                        .HasForeignKey("IdXuatSu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ThuongHieu");

                    b.Navigation("XuatSu");
                });

            modelBuilder.Entity("AppData.model.SanPhamChiTiet", b =>
                {
                    b.HasOne("AppData.model.SanPham", "SanPham")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("IDSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.model.Anh", "Anh")
                        .WithMany("sanPhamChiTiets")
                        .HasForeignKey("IdAnh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.model.ChatLieu", "ChatLieu")
                        .WithMany("sanPhamChiTiets")
                        .HasForeignKey("IdChatLieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.model.DanhMuc", "DanhMuc")
                        .WithMany("phamChiTiet")
                        .HasForeignKey("IdDanhMuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.model.MauSac", "MauSac")
                        .WithMany("phamChiTiet")
                        .HasForeignKey("IdMauSac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.model.Size", "Size")
                        .WithMany("sanPhamChiTiets")
                        .HasForeignKey("IdSize")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anh");

                    b.Navigation("ChatLieu");

                    b.Navigation("DanhMuc");

                    b.Navigation("MauSac");

                    b.Navigation("SanPham");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("AppData.model.VoucherDetail", b =>
                {
                    b.HasOne("AppData.model.NguoiDung", "NguoiDung")
                        .WithMany("voucherDetails")
                        .HasForeignKey("IdNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.model.Voucher", "Voucher")
                        .WithMany("VoucherDetail")
                        .HasForeignKey("IdVoucher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("AppData.model.Quyen", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("AppData.model.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("AppData.model.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("AppData.model.Quyen", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppData.model.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("AppData.model.NguoiDung", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppData.model.Anh", b =>
                {
                    b.Navigation("sanPhamChiTiets");
                });

            modelBuilder.Entity("AppData.model.ChatLieu", b =>
                {
                    b.Navigation("sanPhamChiTiets");
                });

            modelBuilder.Entity("AppData.model.Combo", b =>
                {
                    b.Navigation("ComboChiTiet");
                });

            modelBuilder.Entity("AppData.model.ComboChiTiet", b =>
                {
                    b.Navigation("GioHangChiTiets");

                    b.Navigation("hoaDonChiTiets");
                });

            modelBuilder.Entity("AppData.model.DanhMuc", b =>
                {
                    b.Navigation("phamChiTiet");
                });

            modelBuilder.Entity("AppData.model.GioHang", b =>
                {
                    b.Navigation("gioHangChiTiets");
                });

            modelBuilder.Entity("AppData.model.HinhThucThanhToan", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("AppData.model.HoaDon", b =>
                {
                    b.Navigation("LichSuHoaDons");

                    b.Navigation("hoaDonChiTiets");
                });

            modelBuilder.Entity("AppData.model.MauSac", b =>
                {
                    b.Navigation("phamChiTiet");
                });

            modelBuilder.Entity("AppData.model.NguoiDung", b =>
                {
                    b.Navigation("BinhLuans");

                    b.Navigation("gioHangs");

                    b.Navigation("hoaDons");

                    b.Navigation("lichSuHoaDons");

                    b.Navigation("voucherDetails");
                });

            modelBuilder.Entity("AppData.model.SanPham", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("AppData.model.SanPhamChiTiet", b =>
                {
                    b.Navigation("BinhLuans");

                    b.Navigation("comboChiTiets");

                    b.Navigation("gioHangChiTiets");

                    b.Navigation("hoaDonChiTiets");
                });

            modelBuilder.Entity("AppData.model.Size", b =>
                {
                    b.Navigation("sanPhamChiTiets");
                });

            modelBuilder.Entity("AppData.model.ThuongHieu", b =>
                {
                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("AppData.model.Voucher", b =>
                {
                    b.Navigation("VoucherDetail");
                });

            modelBuilder.Entity("AppData.model.VoucherDetail", b =>
                {
                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("AppData.model.XuatSu", b =>
                {
                    b.Navigation("SanPham");
                });
#pragma warning restore 612, 618
        }
    }
}
